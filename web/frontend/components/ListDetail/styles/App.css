/* CSS file */
.ion-page {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    will-change: transform;
    transition: transform 0.3s ease;
  }
  
  .ion-page.ion-page-enter,
  .ion-page.ion-page-leave {
    transform: translateX(100%);
  }
  
  .ion-page.ion-page-enter-active,
  .ion-page.ion-page-leave-active {
    transform: translateX(0);
  }
  


  /* CSS */
.typewriter p{
  overflow: hidden; /* Hide overflowing characters */
  white-space: nowrap; /* Prevent line breaks */
  animation: typewriter 2s steps(40) 1s forwards; /* Use the 'typewriter' animation */
}

@keyframes typewriter {
  from {
    width: 0; /* Start with a width of 0 (no characters visible) */
  }
  to {
    width: 100%; /* Gradually increase the width to show all characters */
  }
}

ion-toast.custom-toast::part(message) {
  font-size: 15px;
}

.typewriter-animation {
  animation: typing 2.9s steps(20, end);
  overflow: hidden;
  display: inline-block;
}

@keyframes typing {
  from {
    width: 0;
  }
}

ion-accordion {
  margin: 0 auto;
}
/* 
ion-accordion.accordion-expanding,
ion-accordion.accordion-expanded {
  width: calc(100% - 32px);

  margin: 16px auto;
}

ion-accordion.accordion-collapsing ion-item[slot='header'],
ion-accordion.accordion-collapsed ion-item[slot='header'] {
  --background: var(--ion-color-light);
  --color: var(--ion-color-light-contrast);
}

ion-accordion.accordion-expanding ion-item[slot='header'],
ion-accordion.accordion-expanded ion-item[slot='header'] {
  --background: var(--ion-color-primary);
  --color: var(--ion-color-primary-contrast);
} */

.emoji {
  font-size: 5em;
}
.img-responsive {
  max-width: 100px;
  max-height:100px;


}


.text-container {
  position: relative;
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

#vibrating-text {
  font-size: 36px;
  position: relative;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background-color: #ff0000;
  border-radius: 50%;
  opacity: 1;
  animation: particleAnimation 1s linear infinite;
}

@keyframes particleAnimation {
  0% {
    opacity: 1;
  }
  100% {
    transform: translate(calc(random() * 100vw), calc(random() * 100vh));
    opacity: 0;
  }
}
